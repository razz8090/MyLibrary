using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;
using mylibrary.DTOs.ResponseDTOs;
using mylibrary.Models.CommonModel;

namespace mylibrary.Models.User;

[BsonIgnoreExtraElements]
public class	User: ModelExtension
{
	[BsonId, BsonRepresentation(BsonType.ObjectId), BsonElement("_id")]
	public string ID { get; set; }

	public string FirstName { get; set; }

	public string LastName { get; set; }
			
	public string EmailId { get; set; }

	public string MobileNumber { get; set; }

    public List<string> Roles { get; set; } = new List<string>(); // e.g., Admin, Editor, User

    public List<string> Permissions { get; set; } = new List<string>(); // e.g., "Read", "Write", "Delete"

    public Address Address { get; set; }

    public Nullable<DateTime> LastLogin { get; set; }

    public TnC TnC { get; set; }

	public PasswordDetails Password { get; set; }

	public RegisterStep RegisterStep { get; set; }

    public RefreshTokenDetails RefreshToken { get; set; }

}

[BsonIgnoreExtraElements]
public class Address
{
	public Option Country { get; set; }
	public Option State { get; set; }
	public Option City { get; set; }
	public string ZipCode { get; set; }
	public string AddressLine1 { get; set; }
	public string AddressLine2 { get; set; }


}

[BsonIgnoreExtraElements]
public class Option
{
    [BsonId]
    [BsonRepresentation(BsonType.ObjectId), BsonElement("_id")]
    public string ID { get; set; }
	public string Name { get; set; }
}

[BsonIgnoreExtraElements]
public class TnC
{
	public bool IsAcepted { get; set; }
	public DateTime AceptedOn { get; set; }
}


[BsonIgnoreExtraElements]
public class MembershipCard
{
	public string MembershipNumber { get; set; }
	public DateTime StartDate { get; set; }
	public DateTime EndDate { get; set; }
	public MembershipStatus Status { get; set; }
}

public enum MembershipStatus
{
	Active = 1,
	DeActive,
	Expired
}

[BsonIgnoreExtraElements]
public class PasswordDetails
{
	public string Password { get; set; }
	public DateTime CreatedOn { get; set; }
	public bool IsAutoGenerated { get; set; }
	public Nullable<DateTime> ExpiryDate { get; set; }
	public string Salt { get; set; }
    public int OTPFailedCount { get; set; }
    public int LoginFailedAttemotCount { get; set; }
    public Nullable<DateTime> LoginBlockedTime { get; set; }
    public List<PasswordDetails> OldPasswords { get; set; } //Will save las file old password
}

[BsonIgnoreExtraElements]
public class RefreshTokenDetails
{
    public string RefreshToken { get; set; }

    public DateTime RefreshTokenExpiry { get; set; }
}

public enum RegisterStep
{
    Address = 1,
    Permssion = 2,
    Completed = 3
}